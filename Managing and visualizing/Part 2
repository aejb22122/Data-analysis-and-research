#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""

@author: annick-eudes
"""
# --------------------------------------------------------------------------------------------
#               Part # 2 / regarding our research ~ Making data management decisions
# --------------------------------------------------------------------------------------------

# We will not be working with a subset of the data, because our research question, and
# our hypothesis, needs to have a view of the optimisum in regards to the income level.
# 1rst we will code the missing values
# we are going to set responses of (-1 ~ Refused)  for these variables to missing,
# so that Python disregards these values. We will code the missing values (nan).

# Data Management

# Data management ~ Making decions about the data
# 1rst decide to code or not the missing values

# ------------------ Coding or recoding missing values ----------------------------------------
print("Let's start the Data Management ~ decision about the data, missing values", end = '')
print(" and creating secondary variables")
Data["W1_P20"]=Data["W1_P20"].replace(-1, numpy.nan)
Data["W1_G2"]=Data["W1_G2"].replace(-1, numpy.nan)
Data["W1_F1"]=Data["W1_F1"].replace(-1, numpy.nan)

# Let's have a look at the variables with the new managed variables compared to the original variables
# The 'dropna = False' argument will display the missing values

print("Count of personal annual income (with the recoding of the missing values): ")
c2 = Data["W1_P20"].value_counts(sort=False, dropna = False)
print(c2)

print("Counts of When you think about your future, are you generally 1 = optimistic, ",end='')
print(" 2 = neither, or 3 = pessimistic? (with the recoding of the missing values)")
opt = Data["W1_F1"].value_counts(sort=False, dropna = False)
print(opt)

print("Percentage of the us economic situation : 1 = Better, 2 = About the same, ",end='')
print(" 3 = Worse, -1 = Refused to answer (with the recoding of the missing values)")
p1 = Data["W1_G2"].value_counts(sort=False, dropna = True)
print(p1)



# We chose to group values within individual variables for the W1_P20 variable representing
# income level.
# categorize quantitative variable based on customized splits are done by using cut function
# we split the variable into 4 groups (1-7, 8-11, 12-15, 16-19)
# remember that Python starts counting from 0, not 1

# ------------------ Grouping values within individual variables --------------------------

print("The income level is divided into 4 groups : 1-7 (5k- 24k), 8-11(25k-49k)", end = '')
print(" 12-15(50k-99k), 16-19 (100k-175k or more))")
Data["W1_P20"] = pandas.cut(Data.W1_P20, [0, 7, 11, 15, 19])
c10 = Data["W1_P20"].value_counts(sort = False, dropna = True)
print(c10)
